@page "/Profile/{Username}"
@using Microsoft.AspNetCore.Components.Authorization
@using CodeConnect.WebAssembly.Components
@using CodeConnect.WebAssembly.Components.SVGs
@using DomainLayer.Constants
@inherits ProfileBase

@if (FoundUser)
{
    <AuthorizeView>
        <Authorized>
            <div class="w-[90vw] max-w-[1100px] bg-dark-secondaryColor rounded-md mx-auto pt-5 pb-10 mt-5">
                <div class="w-[95%] max-w-[1000px] md:mt-5 mx-auto relative rounded-md">
                    <div class="w-[100%] relative">
                        @if (IsCurrentUser)
                        {
                            <div class="absolute w-[100%] md:h-[450px] h-[200px] rounded-md hover:cursor-pointer opacity-0 hover:opacity-100 bg-black/80 rounded-full flex" @onclick="() => UpdateImage(Constants.ImageTypeOfUpdate.BackgroundImage)"><i class="fa-solid fa-pen-to-square fa-2xl text-gray-200 mx-auto self-center"></i></div>
                        }
                        <img src="@UserDetails?.BackgroundImg" class="w-[100%] md:h-[450px] h-[200px] rounded-md mx-auto object-cover" alt=""/>
                    </div>
                    <div class="flex flex-col md:flex-row">
                        <div class="w-[200px] md:h-[200px] h-[70px] z-[50] relative">
                            <div class="flex flex-col">
                                <div class="relative md:h-[150px] h-[55px]">
                                    <div class="absolute md:w-[200px] md:h-[200px] w-[100px] h-[100px] -top-[50px] md:left-[30px] left-[10px] rounded-full">
                                        @if (IsCurrentUser)
                                        {
                                            <div class="absolute md:w-[200px] md:h-[200px] w-[100px] h-[100px] hover:cursor-pointer opacity-0 hover:opacity-100 bg-black/80 rounded-full flex" @onclick="() => UpdateImage(Constants.ImageTypeOfUpdate.ProfileImage)"><i class="fa-solid fa-pen-to-square fa-2xl text-gray-200 mx-auto self-center"></i></div>
                                        }
                                        <div class="md:w-[200px] md:h-[200px] w-[100px] h-[100px]">
                                            <img src="@UserDetails?.ProfileImg" class="w-[100%] h-[100%] rounded-full object-cover" alt="profile image"/>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="md:mt-5 md:pl-[80px]">
                            <div>
                                @if (IsCurrentUser)
                                {
                                    <button class="rounded-md border-red-800 bg-red-500 w-[150px] h-[30px] font-bold hover:bg-red-700" @onclick="ToggleShowConfirmLogout">Logout</button>
                                }
                                <div class="flex pt-[20px]">
                                    <div>
                                        <p class="font-bold md:text-4xl text-2xl dark:text-dark-supportColor text-light-primaryColor">@UserDetails?.FirstName @UserDetails?.LastName</p>
                                    </div>
                                    @if (IsCurrentUser)
                                    {
                                        <button @onclick="ToggleEditProfile" class="dark:text-dark-supportColor text-light-supportColor fa-solid fa-pen-to-square md:fa-2xl fa-xl ml-5 hover:cursor-pointer"></button>
                                    }
                                </div>
                                <div class="flex">
                                    <p class="pt-[5px] font-bold text-lg dark:text-dark-supportColor/70 text-light-primaryColor/70">&#x40;@UserDetails?.UserName</p>
                                    <div class="flex md:mt-2 ml-[10px] md:ml-[5px]">
                                        @if (!string.IsNullOrEmpty(UserDetails?.GithubLink))
                                        {
                                            <div class="md:ml-5">
                                                <a href="@UserDetails?.GithubLink" target="_blank"><GithubSVG Width="30" Height="30" Color="#333333"/></a>
                                            </div>
                                        }
                                        @if (!string.IsNullOrEmpty(UserDetails?.WebsiteLink))
                                        {
                                            <div class="ml-2">
                                                <a href="@UserDetails?.WebsiteLink" target="_blank"><WebsiteSVG Width="30" Height="30" Color="#333333"/></a>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="flex flex-col lg:flex-row lg:space-x-2 mt-5 md:mt-0">
                        <div class="bg-dark-primaryColor/70 rounded-md p-3 md:w-[500px] md:max-h-[200px] md:mx-auto">
                            <h3 class="text-2xl font-semibold dark:text-dark-supportColor text-light-primaryColor">Bio</h3>
                            <p class="dark:text-dark-supportColor/90 text-light-primaryColor/90">@(string.IsNullOrEmpty(UserDetails?.Bio) ? "Bio is looking empty..." : UserDetails?.Bio)</p>
                        </div>
                        <div class="p-3 bg-dark-primaryColor/70 rounded-md min min-w-[200px] lg:max-w-[400px] md:max-w-[500px] mt-5 lg:mt-0 md:mx-auto ">
                            <div class="flex">
                                <h3 class="text-2xl ml-2 font-semibold dark:text-dark-supportColor text-light-primaryColor">Interests</h3>
                                @if (IsCurrentUser)
                                {
                                    <button class="w-[100px] h-[25px] text-dark-secondaryColor font-bold rounded ml-auto">Edit</button>
                                }
                            </div>
                            <div class="flex flex-wrap w-[100%]">
                                @if (false)
                                {
                                    <p class="dark:text-dark-supportColor/80 pt-[10px] ml-2 text-light-primaryColor/90">This person has no interests... Boring.</p>
                                }
                                else
                                {
                                    for (int i = 0; i < 13; i++)
                                    {
                                        <div class="rounded-md bg-dark-primaryColor/70 ml-2 mt-[10px]">
                                            <p class="p-[5px] font-bold text-light-primaryColor/70">Interesting</p>
                                        </div>
                                    }
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="w-[85%] max-w-[1000px] mt-5 mx-auto relative">
                <p class="text-4xl font-bold dark:text-dark-supportColor text-light-supportColor">Recent Posts</p>
                <div class="mt-5 text-center dark:text-dark-supportColor text-light-supportColor">
                    <p>...Winds howling</p>
                    <div class="w-[100px] mx-auto">
                        <EmptySVG Width="100" Height="100" Color="555555"></EmptySVG>
                    </div>
                    <p>man its empty in here, @(IsCurrentUser ? "just make a post already" : "this user hasn't posted yet")</p>
                </div>
            </div>
            @if (ShowConfirmLogout)
            {
                <LogoutConfirm ConfirmLogout="AuthenticateServiceClient.LogoutUser" CancelLogout="ToggleShowConfirmLogout"/>
            }
            @if (ShowEditProfile)
            {
                <EditProfile Cancel="ToggleEditProfile"/>
            }
            @if (ShowUpdateImage)
            {
                <UpdateImage UpdateOfImageType="UpdateImageType" Cancel="ToggleEditImage"/> 
            }
        </Authorized>
    </AuthorizeView>
}