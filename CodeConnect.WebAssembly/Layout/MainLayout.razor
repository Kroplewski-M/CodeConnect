@using DomainLayer.Entities
@inherits LayoutComponentBase
@inject NavigationManager NavManager
@inject NotificationsService NotificationsService
@inject IJSRuntime JS

<div class="bg-light-primaryColor dark:bg-dark-primaryColor min-h-screen flex flex-row">
    <div class="w-[250px]">
        <NavMenu/>
    </div>
    <main class="border border-red-600 px-4 z-[200] flex-grow">
        <button @onclick="ToggleDarkMode">toggle</button>
        <div class="">
            @foreach (var notification in Notifications)
            {
                <div class="@GetNotificationType(notification.NotificationType) ">
                    <p>@notification.Message</p>
                </div>
            }
        </div>
        @Body
    </main>
</div>

@code{
    public List<Notification> Notifications = [];

    protected override void OnInitialized()
    {
        NotificationsService.OnChange += UpdateNotifications;
        Notifications = NotificationsService.GetNotification();
    }

    private string GetNotificationType(NotificationType type)
    {
        switch (type)
        {
            case NotificationType.Success:
                return "bg-success";
            case NotificationType.Error:
                return "bg-danger";
            case NotificationType.Warning:
                return "bg-warning";
            case NotificationType.Info:
                return "bg-info";
            default:
                return "";
        }
    }

    private void UpdateNotifications()
    {
        Notifications = NotificationsService.GetNotification();
        StateHasChanged();
    }

    public void Dispose()
    {
        NotificationsService.OnChange -= UpdateNotifications;
    }

    private void ToggleDarkMode()
    {
        JS.InvokeVoidAsync("toggleDarkMode");
    }

}
