// <auto-generated />
using System;
using InfrastructureLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InfrastructureLayer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250310192121_removeRequiredFromUser")]
    partial class removeRequiredFromUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DomainLayer.DbEnts.Interest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Interests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "General"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Frontend Libraries"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Backend Libraries"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Programming Languages"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Mobile Development"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Databases"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Devops"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Version Control"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Containerization Virtualization"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Testing Frameworks"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Data Processing Tools"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Machine Learning Tools"
                        });
                });

            modelBuilder.Entity("DomainLayer.DbEnts.TechInterests", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("InterestId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InterestId");

                    b.ToTable("TechInterests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InterestId = 1,
                            Name = "Frontend Dev"
                        },
                        new
                        {
                            Id = 2,
                            InterestId = 1,
                            Name = "Backend Dev"
                        },
                        new
                        {
                            Id = 3,
                            InterestId = 1,
                            Name = "Devops"
                        },
                        new
                        {
                            Id = 4,
                            InterestId = 1,
                            Name = "Mobile Dev"
                        },
                        new
                        {
                            Id = 5,
                            InterestId = 1,
                            Name = "Cloud"
                        },
                        new
                        {
                            Id = 6,
                            InterestId = 4,
                            Name = "Python"
                        },
                        new
                        {
                            Id = 7,
                            InterestId = 4,
                            Name = "JavaScript"
                        },
                        new
                        {
                            Id = 8,
                            InterestId = 4,
                            Name = "Java"
                        },
                        new
                        {
                            Id = 9,
                            InterestId = 4,
                            Name = "C#"
                        },
                        new
                        {
                            Id = 10,
                            InterestId = 4,
                            Name = "C++"
                        },
                        new
                        {
                            Id = 11,
                            InterestId = 4,
                            Name = "Ruby"
                        },
                        new
                        {
                            Id = 12,
                            InterestId = 4,
                            Name = "PHP"
                        },
                        new
                        {
                            Id = 13,
                            InterestId = 4,
                            Name = "Go"
                        },
                        new
                        {
                            Id = 14,
                            InterestId = 4,
                            Name = "Rust"
                        },
                        new
                        {
                            Id = 15,
                            InterestId = 4,
                            Name = "Swift"
                        },
                        new
                        {
                            Id = 16,
                            InterestId = 4,
                            Name = "Kotlin"
                        },
                        new
                        {
                            Id = 17,
                            InterestId = 4,
                            Name = "TypeScript"
                        },
                        new
                        {
                            Id = 18,
                            InterestId = 4,
                            Name = "Dart"
                        },
                        new
                        {
                            Id = 19,
                            InterestId = 4,
                            Name = "R"
                        },
                        new
                        {
                            Id = 20,
                            InterestId = 4,
                            Name = "Objective-C"
                        },
                        new
                        {
                            Id = 21,
                            InterestId = 4,
                            Name = "Scala"
                        },
                        new
                        {
                            Id = 22,
                            InterestId = 4,
                            Name = "Perl"
                        },
                        new
                        {
                            Id = 23,
                            InterestId = 4,
                            Name = "Haskell"
                        },
                        new
                        {
                            Id = 24,
                            InterestId = 4,
                            Name = "Lua"
                        },
                        new
                        {
                            Id = 25,
                            InterestId = 4,
                            Name = "Elixir"
                        },
                        new
                        {
                            Id = 26,
                            InterestId = 4,
                            Name = "Clojure"
                        },
                        new
                        {
                            Id = 27,
                            InterestId = 4,
                            Name = "F#"
                        },
                        new
                        {
                            Id = 28,
                            InterestId = 4,
                            Name = "Visual Basic .NET"
                        },
                        new
                        {
                            Id = 29,
                            InterestId = 4,
                            Name = "OCaml"
                        },
                        new
                        {
                            Id = 30,
                            InterestId = 2,
                            Name = "React"
                        },
                        new
                        {
                            Id = 31,
                            InterestId = 2,
                            Name = "Angular"
                        },
                        new
                        {
                            Id = 32,
                            InterestId = 2,
                            Name = "Vue.js"
                        },
                        new
                        {
                            Id = 33,
                            InterestId = 2,
                            Name = "Svelte"
                        },
                        new
                        {
                            Id = 34,
                            InterestId = 2,
                            Name = "Ember.js"
                        },
                        new
                        {
                            Id = 35,
                            InterestId = 2,
                            Name = "Backbone.js"
                        },
                        new
                        {
                            Id = 36,
                            InterestId = 2,
                            Name = "Next.js"
                        },
                        new
                        {
                            Id = 37,
                            InterestId = 2,
                            Name = "Nuxt.js"
                        },
                        new
                        {
                            Id = 38,
                            InterestId = 2,
                            Name = "jQuery"
                        },
                        new
                        {
                            Id = 39,
                            InterestId = 2,
                            Name = "Bootstrap"
                        },
                        new
                        {
                            Id = 40,
                            InterestId = 2,
                            Name = "Tailwind CSS"
                        },
                        new
                        {
                            Id = 41,
                            InterestId = 2,
                            Name = "Foundation"
                        },
                        new
                        {
                            Id = 42,
                            InterestId = 2,
                            Name = "Semantic UI"
                        },
                        new
                        {
                            Id = 43,
                            InterestId = 2,
                            Name = "Bulma"
                        },
                        new
                        {
                            Id = 44,
                            InterestId = 2,
                            Name = "Blazor"
                        },
                        new
                        {
                            Id = 45,
                            InterestId = 2,
                            Name = "Solid"
                        },
                        new
                        {
                            Id = 46,
                            InterestId = 2,
                            Name = "Astro"
                        },
                        new
                        {
                            Id = 47,
                            InterestId = 3,
                            Name = "Django"
                        },
                        new
                        {
                            Id = 48,
                            InterestId = 3,
                            Name = "Flask"
                        },
                        new
                        {
                            Id = 49,
                            InterestId = 3,
                            Name = "Ruby on Rails"
                        },
                        new
                        {
                            Id = 50,
                            InterestId = 3,
                            Name = "Spring"
                        },
                        new
                        {
                            Id = 51,
                            InterestId = 3,
                            Name = "Express"
                        },
                        new
                        {
                            Id = 52,
                            InterestId = 3,
                            Name = "NestJS"
                        },
                        new
                        {
                            Id = 53,
                            InterestId = 3,
                            Name = "Laravel"
                        },
                        new
                        {
                            Id = 54,
                            InterestId = 3,
                            Name = "ASP.NET Core"
                        },
                        new
                        {
                            Id = 55,
                            InterestId = 3,
                            Name = "Koa"
                        },
                        new
                        {
                            Id = 56,
                            InterestId = 3,
                            Name = "Phoenix"
                        },
                        new
                        {
                            Id = 57,
                            InterestId = 3,
                            Name = "Play Framework"
                        },
                        new
                        {
                            Id = 58,
                            InterestId = 3,
                            Name = "Symfony"
                        },
                        new
                        {
                            Id = 59,
                            InterestId = 3,
                            Name = "CakePHP"
                        },
                        new
                        {
                            Id = 60,
                            InterestId = 3,
                            Name = "FastAPI"
                        },
                        new
                        {
                            Id = 61,
                            InterestId = 3,
                            Name = "Gin Gonic"
                        },
                        new
                        {
                            Id = 62,
                            InterestId = 5,
                            Name = "Flutter"
                        },
                        new
                        {
                            Id = 63,
                            InterestId = 5,
                            Name = "React Native"
                        },
                        new
                        {
                            Id = 64,
                            InterestId = 5,
                            Name = "Swift"
                        },
                        new
                        {
                            Id = 65,
                            InterestId = 5,
                            Name = "Kotlin"
                        },
                        new
                        {
                            Id = 66,
                            InterestId = 5,
                            Name = "Xamarin"
                        },
                        new
                        {
                            Id = 67,
                            InterestId = 5,
                            Name = "Ionic"
                        },
                        new
                        {
                            Id = 68,
                            InterestId = 5,
                            Name = "Apache Cordova"
                        },
                        new
                        {
                            Id = 69,
                            InterestId = 5,
                            Name = "Unity"
                        },
                        new
                        {
                            Id = 70,
                            InterestId = 5,
                            Name = "Android SDK"
                        },
                        new
                        {
                            Id = 71,
                            InterestId = 5,
                            Name = "iOS SDK"
                        },
                        new
                        {
                            Id = 72,
                            InterestId = 6,
                            Name = "MySQL"
                        },
                        new
                        {
                            Id = 73,
                            InterestId = 6,
                            Name = "PostgreSQL"
                        },
                        new
                        {
                            Id = 74,
                            InterestId = 6,
                            Name = "MongoDB"
                        },
                        new
                        {
                            Id = 75,
                            InterestId = 6,
                            Name = "SQLite"
                        },
                        new
                        {
                            Id = 76,
                            InterestId = 6,
                            Name = "Oracle DB"
                        },
                        new
                        {
                            Id = 77,
                            InterestId = 6,
                            Name = "Microsoft SQL Server"
                        },
                        new
                        {
                            Id = 78,
                            InterestId = 6,
                            Name = "Redis"
                        },
                        new
                        {
                            Id = 79,
                            InterestId = 6,
                            Name = "Elasticsearch"
                        },
                        new
                        {
                            Id = 80,
                            InterestId = 6,
                            Name = "Cassandra"
                        },
                        new
                        {
                            Id = 81,
                            InterestId = 6,
                            Name = "Firebase Realtime Database"
                        },
                        new
                        {
                            Id = 82,
                            InterestId = 6,
                            Name = "DynamoDB"
                        },
                        new
                        {
                            Id = 83,
                            InterestId = 6,
                            Name = "MariaDB"
                        },
                        new
                        {
                            Id = 84,
                            InterestId = 6,
                            Name = "CouchDB"
                        },
                        new
                        {
                            Id = 85,
                            InterestId = 6,
                            Name = "Neo4j"
                        },
                        new
                        {
                            Id = 86,
                            InterestId = 6,
                            Name = "Supabase"
                        },
                        new
                        {
                            Id = 87,
                            InterestId = 7,
                            Name = "Docker"
                        },
                        new
                        {
                            Id = 88,
                            InterestId = 7,
                            Name = "Kubernetes"
                        },
                        new
                        {
                            Id = 89,
                            InterestId = 7,
                            Name = "Jenkins"
                        },
                        new
                        {
                            Id = 90,
                            InterestId = 7,
                            Name = "GitLab CI/CD"
                        },
                        new
                        {
                            Id = 91,
                            InterestId = 7,
                            Name = "Travis CI"
                        },
                        new
                        {
                            Id = 92,
                            InterestId = 7,
                            Name = "CircleCI"
                        },
                        new
                        {
                            Id = 93,
                            InterestId = 7,
                            Name = "Terraform"
                        },
                        new
                        {
                            Id = 94,
                            InterestId = 7,
                            Name = "Ansible"
                        },
                        new
                        {
                            Id = 95,
                            InterestId = 7,
                            Name = "Puppet"
                        },
                        new
                        {
                            Id = 96,
                            InterestId = 7,
                            Name = "Chef"
                        },
                        new
                        {
                            Id = 97,
                            InterestId = 7,
                            Name = "Vagrant"
                        },
                        new
                        {
                            Id = 98,
                            InterestId = 7,
                            Name = "AWS"
                        },
                        new
                        {
                            Id = 99,
                            InterestId = 7,
                            Name = "Azure"
                        },
                        new
                        {
                            Id = 100,
                            InterestId = 7,
                            Name = "Google Cloud Platform"
                        },
                        new
                        {
                            Id = 101,
                            InterestId = 7,
                            Name = "Heroku"
                        },
                        new
                        {
                            Id = 102,
                            InterestId = 7,
                            Name = "Netlify"
                        },
                        new
                        {
                            Id = 103,
                            InterestId = 7,
                            Name = "DigitalOcean"
                        },
                        new
                        {
                            Id = 104,
                            InterestId = 7,
                            Name = "GitHub Actions"
                        },
                        new
                        {
                            Id = 105,
                            InterestId = 7,
                            Name = "Bamboo"
                        },
                        new
                        {
                            Id = 106,
                            InterestId = 8,
                            Name = "Git"
                        },
                        new
                        {
                            Id = 107,
                            InterestId = 8,
                            Name = "Subversion (SVN)"
                        },
                        new
                        {
                            Id = 108,
                            InterestId = 8,
                            Name = "Mercurial"
                        },
                        new
                        {
                            Id = 109,
                            InterestId = 8,
                            Name = "Bitbucket"
                        },
                        new
                        {
                            Id = 110,
                            InterestId = 8,
                            Name = "GitHub"
                        },
                        new
                        {
                            Id = 111,
                            InterestId = 8,
                            Name = "GitLab"
                        },
                        new
                        {
                            Id = 112,
                            InterestId = 8,
                            Name = "Perforce"
                        },
                        new
                        {
                            Id = 113,
                            InterestId = 9,
                            Name = "Docker"
                        },
                        new
                        {
                            Id = 114,
                            InterestId = 9,
                            Name = "Kubernetes"
                        },
                        new
                        {
                            Id = 115,
                            InterestId = 9,
                            Name = "OpenShift"
                        },
                        new
                        {
                            Id = 116,
                            InterestId = 9,
                            Name = "Vagrant"
                        },
                        new
                        {
                            Id = 117,
                            InterestId = 9,
                            Name = "VMware"
                        },
                        new
                        {
                            Id = 118,
                            InterestId = 9,
                            Name = "Hyper-V"
                        },
                        new
                        {
                            Id = 119,
                            InterestId = 9,
                            Name = "Parallels"
                        },
                        new
                        {
                            Id = 120,
                            InterestId = 9,
                            Name = "VirtualBox"
                        },
                        new
                        {
                            Id = 121,
                            InterestId = 10,
                            Name = "JUnit"
                        },
                        new
                        {
                            Id = 122,
                            InterestId = 10,
                            Name = "Mocha"
                        },
                        new
                        {
                            Id = 123,
                            InterestId = 10,
                            Name = "Jest"
                        },
                        new
                        {
                            Id = 124,
                            InterestId = 10,
                            Name = "RSpec"
                        },
                        new
                        {
                            Id = 125,
                            InterestId = 10,
                            Name = "Selenium"
                        },
                        new
                        {
                            Id = 126,
                            InterestId = 10,
                            Name = "Cypress"
                        },
                        new
                        {
                            Id = 127,
                            InterestId = 10,
                            Name = "Puppeteer"
                        },
                        new
                        {
                            Id = 128,
                            InterestId = 10,
                            Name = "Postman"
                        },
                        new
                        {
                            Id = 129,
                            InterestId = 10,
                            Name = "PyTest"
                        },
                        new
                        {
                            Id = 130,
                            InterestId = 10,
                            Name = "TestNG"
                        },
                        new
                        {
                            Id = 131,
                            InterestId = 10,
                            Name = "xUnit"
                        },
                        new
                        {
                            Id = 132,
                            InterestId = 10,
                            Name = "Robot Framework"
                        },
                        new
                        {
                            Id = 133,
                            InterestId = 10,
                            Name = "Chai"
                        },
                        new
                        {
                            Id = 134,
                            InterestId = 10,
                            Name = "Cucumber"
                        },
                        new
                        {
                            Id = 135,
                            InterestId = 11,
                            Name = "Apache Hadoop"
                        },
                        new
                        {
                            Id = 136,
                            InterestId = 11,
                            Name = "Apache Spark"
                        },
                        new
                        {
                            Id = 137,
                            InterestId = 11,
                            Name = "Kafka"
                        },
                        new
                        {
                            Id = 138,
                            InterestId = 11,
                            Name = "Flink"
                        },
                        new
                        {
                            Id = 139,
                            InterestId = 11,
                            Name = "Pandas"
                        },
                        new
                        {
                            Id = 140,
                            InterestId = 11,
                            Name = "NumPy"
                        },
                        new
                        {
                            Id = 141,
                            InterestId = 11,
                            Name = "Apache Beam"
                        },
                        new
                        {
                            Id = 142,
                            InterestId = 11,
                            Name = "TensorFlow"
                        },
                        new
                        {
                            Id = 143,
                            InterestId = 11,
                            Name = "PyTorch"
                        },
                        new
                        {
                            Id = 144,
                            InterestId = 11,
                            Name = "Dask"
                        },
                        new
                        {
                            Id = 145,
                            InterestId = 11,
                            Name = "HBase"
                        },
                        new
                        {
                            Id = 146,
                            InterestId = 11,
                            Name = "Hive"
                        },
                        new
                        {
                            Id = 147,
                            InterestId = 11,
                            Name = "Pig"
                        },
                        new
                        {
                            Id = 148,
                            InterestId = 11,
                            Name = "Storm"
                        },
                        new
                        {
                            Id = 149,
                            InterestId = 12,
                            Name = "TensorFlow"
                        },
                        new
                        {
                            Id = 150,
                            InterestId = 12,
                            Name = "PyTorch"
                        },
                        new
                        {
                            Id = 151,
                            InterestId = 12,
                            Name = "scikit-learn"
                        },
                        new
                        {
                            Id = 152,
                            InterestId = 12,
                            Name = "Keras"
                        },
                        new
                        {
                            Id = 153,
                            InterestId = 12,
                            Name = "XGBoost"
                        },
                        new
                        {
                            Id = 154,
                            InterestId = 12,
                            Name = "LightGBM"
                        },
                        new
                        {
                            Id = 155,
                            InterestId = 12,
                            Name = "MXNet"
                        },
                        new
                        {
                            Id = 156,
                            InterestId = 12,
                            Name = "Caffe"
                        },
                        new
                        {
                            Id = 157,
                            InterestId = 12,
                            Name = "Theano"
                        },
                        new
                        {
                            Id = 158,
                            InterestId = 12,
                            Name = "Torch"
                        },
                        new
                        {
                            Id = 159,
                            InterestId = 12,
                            Name = "CNTK"
                        },
                        new
                        {
                            Id = 160,
                            InterestId = 12,
                            Name = "Chainer"
                        });
                });

            modelBuilder.Entity("DomainLayer.DbEnts.UserInterests", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("TechInterestId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("TechInterestId");

                    b.HasIndex("UserId");

                    b.ToTable("UserInterests");
                });

            modelBuilder.Entity("DomainLayer.Entities.Auth.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("BackgroundImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("CreatedAt")
                        .HasColumnType("date");

                    b.Property<DateOnly>("DOB")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GithubLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ProfileImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("WebsiteLink")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("DomainLayer.Entities.Auth.RefreshUserAuth", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RefreshUserAuths");
                });

            modelBuilder.Entity("DomainLayer.Entities.Posts.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("PostId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("DomainLayer.Entities.Posts.CommentLike", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CommentId")
                        .HasColumnType("int");

                    b.Property<string>("LikedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("LikedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CommentId");

                    b.HasIndex("LikedByUserId");

                    b.ToTable("CommentLikes");
                });

            modelBuilder.Entity("DomainLayer.Entities.Posts.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("DomainLayer.Entities.Posts.PostFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("PostFiles");
                });

            modelBuilder.Entity("DomainLayer.Entities.Posts.PostLike", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LikedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("LikedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LikedByUserId");

                    b.HasIndex("PostId");

                    b.ToTable("PostLikes");
                });

            modelBuilder.Entity("DomainLayer.Entities.User.Followers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FollowedUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FollowerUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("FollowedUserId");

                    b.HasIndex("FollowerUserId");

                    b.ToTable("FollowUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("DomainLayer.DbEnts.TechInterests", b =>
                {
                    b.HasOne("DomainLayer.DbEnts.Interest", "Interest")
                        .WithMany()
                        .HasForeignKey("InterestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Interest");
                });

            modelBuilder.Entity("DomainLayer.DbEnts.UserInterests", b =>
                {
                    b.HasOne("DomainLayer.DbEnts.TechInterests", "TechInterest")
                        .WithMany()
                        .HasForeignKey("TechInterestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DomainLayer.Entities.Auth.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("TechInterest");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DomainLayer.Entities.Posts.Comment", b =>
                {
                    b.HasOne("DomainLayer.Entities.Auth.ApplicationUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DomainLayer.Entities.Posts.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("DomainLayer.Entities.Posts.CommentLike", b =>
                {
                    b.HasOne("DomainLayer.Entities.Posts.Comment", "Comment")
                        .WithMany("Likes")
                        .HasForeignKey("CommentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DomainLayer.Entities.Auth.ApplicationUser", "LikedByUser")
                        .WithMany()
                        .HasForeignKey("LikedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comment");

                    b.Navigation("LikedByUser");
                });

            modelBuilder.Entity("DomainLayer.Entities.Posts.Post", b =>
                {
                    b.HasOne("DomainLayer.Entities.Auth.ApplicationUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedByUser");
                });

            modelBuilder.Entity("DomainLayer.Entities.Posts.PostFile", b =>
                {
                    b.HasOne("DomainLayer.Entities.Posts.Post", "Post")
                        .WithMany("Files")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("DomainLayer.Entities.Posts.PostLike", b =>
                {
                    b.HasOne("DomainLayer.Entities.Auth.ApplicationUser", "LikedByUser")
                        .WithMany()
                        .HasForeignKey("LikedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DomainLayer.Entities.Posts.Post", "Post")
                        .WithMany("Likes")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("LikedByUser");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("DomainLayer.Entities.User.Followers", b =>
                {
                    b.HasOne("DomainLayer.Entities.Auth.ApplicationUser", "Followed")
                        .WithMany()
                        .HasForeignKey("FollowedUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DomainLayer.Entities.Auth.ApplicationUser", "Follower")
                        .WithMany()
                        .HasForeignKey("FollowerUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Followed");

                    b.Navigation("Follower");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("DomainLayer.Entities.Auth.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("DomainLayer.Entities.Auth.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DomainLayer.Entities.Auth.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("DomainLayer.Entities.Auth.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DomainLayer.Entities.Posts.Comment", b =>
                {
                    b.Navigation("Likes");
                });

            modelBuilder.Entity("DomainLayer.Entities.Posts.Post", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Files");

                    b.Navigation("Likes");
                });
#pragma warning restore 612, 618
        }
    }
}
